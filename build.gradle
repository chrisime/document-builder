buildscript {
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.1'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
    }
}

plugins {
    id "org.asciidoctor.gradle.asciidoctor" version "1.5.1"
    id 'org.ajoberstar.git-publish' version '1.0.1'
}

project.ext {
    githubUrl = 'https://github.com/chrisime/document-builder'
}

subprojects {

    group = rootProject.group
    version = '1.0.0'

    apply plugin: 'maven'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'nebula.provided-base'

    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }
    dependencies {
        compile 'org.codehaus.groovy:groovy-all:2.4.15'
        testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
        testCompile 'cglib:cglib-nodep:3.2.4'
        testCompile 'org.objenesis:objenesis:2.6'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task release {
        dependsOn gitPublishCommit
    }

}

asciidoctor {
    sourceDir = file('docs')

    resources {
        from(sourceDir) {
            include 'css/**', 'images/**'
        }
    }

    attributes 'source-highlighter': 'prettify',
               'docinfo1': ['version': project.version],
               'imagesdir': 'images',
               'stylesdir': 'css',
               icons: 'font',
               'toc': 'left',
               version: project.version,
               'projectUrl': 'https://github.com/chrisime/document-builder'
}

gitPublish {
    repoUri = "${project.githubUrl}.git".toString()

    contents {
        from file(asciidoctor.outputDir.path + '/html5')
    }

    commitMessage = 'Publishing a new page'
}

gitPublishCommit.dependsOn asciidoctor

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}
